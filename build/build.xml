<?xml version="1.0"?>

<project name="ArchivesSpace" default="help">

  <property name="jruby_url" value="https://s3.amazonaws.com/jruby.org/downloads/9.1.8.0/jruby-complete-9.1.8.0.jar" />
  <property name="jruby_file" value="jruby-complete-9.1.8.0.jar" />

  <property name="jettyrunner_url" value="http://central.maven.org/maven2/org/eclipse/jetty/jetty-runner/9.2.22.v20170606/jetty-runner-9.2.22.v20170606.jar" />
  <property name="jettyrunner_file" value="jetty-runner-9.2.22.v20170606.jar" />

  <property name="gem_home" location="gems" />
  <property name="aspace.backend.port" value="4567" />
  <property name="aspace.frontend.port" value="3000" />
  <property name="aspace.public.port" value="3001" />
  <property name="aspace.solr.port" value="2999" />
  <property name="aspace.data_directory" value="${basedir}/../build" />

  <property environment="env"/>
  <!--
      Extra options for people who like lots of GC detail: -verbose:gc -XX:+PrintTenuringDistribution -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCApplicationConcurrentTime
  -->
  <property name="env.JAVA_OPTS" value="" />
  <property name="default_java_options" value="-XX:MaxPermSize=196m -Djava.security.egd=file:/dev/./urandom -Xmx600m -Xss2m -Daspace.config.data_directory=${aspace.data_directory} -Dfile.encoding=UTF-8 -Daspace.config.search_user_secret=devserver -Daspace.config.public_user_secret=devserver -Daspace.config.staff_user_secret=devserver -Daspace.devserver=true -Daspace.config.frontend_cookie_secret=devserver -Daspace.config.public_cookie_secret=devserver -Daspace.config.solr_url=http://localhost:${aspace.solr.port}" />


  <target name="help" description="This help">
    <java classname="org.apache.tools.ant.Main">
      <arg value="-projecthelp" />
      <arg value="-buildfile" />
      <arg value="${ant.file}" />
    </java>
  </target>

  <!-- Configure our classpath. -->
  <target name="set-classpath" description="Set JRuby classpath">
    <condition property="COVERAGE_REPORTS" value="true">
      <matches pattern=".*coverage" string="${ant.project.invoked-targets}" />
    </condition>

    <property name="jruby_classpath" value="${jruby_file}:../lib/*:../common:../common/lib/*" />
    <property name="COVERAGE_REPORTS" value="false" />
  </target>

  <target name="bootstrap-downloads" description="Download static files used for bootstrapping">
    <delete>
      <fileset dir="." includes="jruby-complete*.jar" excludes="${jruby_file}" />
    </delete>

    <get src="${jruby_url}" dest="${jruby_file}" skipexisting="true" verbose="true" usetimestamp="true" />
    <get src="${solr_url}" dest="${solr_file}" skipexisting="true" verbose="true" usetimestamp="true" />
    <get src="${jettyrunner_url}" dest="${jettyrunner_file}" skipexisting="true" verbose="true" usetimestamp="true" />
  </target>


  <target name="bundler" depends="set-classpath" description="Run bundler against a gemfile" >
    <property name="build.home" location="."/>
    <property name="excluded-gem-groups" value="" />

    <condition property="bundle-without-option" value="--without '${excluded-gem-groups}'" else="">
      <matches pattern="^.+$" string="${excluded-gem-groups}"/>
    </condition>

    <echo message="Fetching gems for ${gemfile}" />

    <java classpath="${jruby_classpath}" classname="org.jruby.Main" fork="true" failonerror="true">
      <jvmarg line="${default_java_options} ${env.JAVA_OPTS}"/>
      <env key="GEM_HOME" value="${gem_home}" />
      <env key="GEM_PATH" value="" />
      <env key="BUNDLE_PATH" value="${gem_home}" />
      <env key="HOME" value="${build.home}" />
      <arg line="gems/bin/bundle install --gemfile='${gemfile}' --no-deployment ${bundle-without-option}" />
    </java>
  </target>

  <target name="bootstrap" depends="bootstrap-downloads" description="Download JRuby and install all required gems">
    <delete dir="gems/gems" />
    <delete dir="gems/bin" />
    <delete dir="gems/specifications" />

    <!-- Delete any bundler configs to avoid exclude groups sticking
         around between runs. -->
    <delete>
      <fileset dir=".." includes="*/.bundle/config" />
    </delete>

    <property name="excluded-gem-groups" value="" />
    <property name="build.home" location="."/>

    <java classpath="${jruby_file}" classname="org.jruby.Main" fork="true" failonerror="true">
      <jvmarg line="${default_java_options} ${env.JAVA_OPTS}"/>
      <env key="GEM_HOME" value="${gem_home}" />
      <env key="GEM_PATH" value="" />
      <env key="BUNDLE_PATH" value="${gem_home}" />
      <env key="HOME" value="${build.home}" />
      <arg line="-S gem install bundler -v 1.12.5" />
    </java>

    <antcall target="bundler">
      <param name="gemfile" value="../backend/Gemfile" />
      <param name="excluded-gem-groups" value="${excluded-gem-groups}" />
    </antcall>
    <antcall target="bundler"><param name="gemfile" value="../frontend/Gemfile" /></antcall>
    <antcall target="bundler"><param name="gemfile" value="../selenium/Gemfile" /></antcall>
    <antcall target="bundler"><param name="gemfile" value="../_yard/Gemfile" /></antcall>
    <antcall target="bundler"><param name="gemfile" value="../public/Gemfile" /></antcall>
    <antcall target="bundler"><param name="gemfile" value="../indexer/Gemfile" /></antcall>
    <antcall target="bundler"><param name="gemfile" value="../oai/Gemfile" /></antcall>
  </target>

  <target name="backend:doc" depends="set-classpath" description="Generate documentation for endpoints">
    <property name="match" value=""/>
    <java classpath="${jruby_classpath}" classname="org.jruby.Main" fork="true" failonerror="true"
          dir="../backend">
      <jvmarg line="${default_java_options} ${env.JAVA_OPTS}"/>
      <env key="GEM_HOME" value="${gem_home}" />
      <env key="GEM_PATH" value="" />
      <env key="BUNDLE_PATH" value="${gem_home}" />
      <arg line="-Iapp scripts/endpoint_doc.rb"/>
      <arg value="${match}"/>
    </java>
  </target>

  <target name="doc:yard" depends="set-classpath" description="Generate the full YARD documentation">
    <java classpath="${jruby_classpath}" classname="org.jruby.Main" fork="true"
          failonerror="true"
          dir="../_yard">
      <jvmarg line="${default_java_options} ${env.JAVA_OPTS}"/>
      <env key="GEM_HOME" value="${gem_home}" />
      <env key="GEM_PATH" value="" />
      <env key="BUNDLE_PATH" value="${gem_home}" />
      <arg line="-S rake doc:gen" />
    </java>
  </target>


  <target name="doc:yardoc" depends="set-classpath" description="Run the yardoc command">
    <java classpath="${jruby_classpath}" classname="org.jruby.Main" fork="true"
          failonerror="true"
          dir="..">
      <jvmarg line="${default_java_options} ${env.JAVA_OPTS}"/>
      <env key="GEM_HOME" value="${gem_home}" />
      <env key="GEM_PATH" value="" />
      <env key="BUNDLE_PATH" value="${gem_home}" />
      <arg line="build/gems/bin/yardoc" />
    </java>

    <java classpath="${jruby_classpath}" classname="org.jruby.Main" fork="true"
          failonerror="true"
          dir="..">
      <jvmarg line="${default_java_options} ${env.JAVA_OPTS}"/>
      <env key="GEM_HOME" value="${gem_home}" />
      <env key="GEM_PATH" value="" />
      <env key="BUNDLE_PATH" value="${gem_home}" />
      <arg line="build/gems/bin/yardoc -f txt" />
    </java>
  </target>

  <target name="doc:build" depends="set-classpath, doc:yard" description="Generate documentation for endpoints">
    <property name="match" value=""/>
    <java classpath="${jruby_classpath}" classname="org.jruby.Main" fork="true" failonerror="true"
          dir="..">
      <jvmarg line="${default_java_options} ${env.JAVA_OPTS}"/>
      <env key="GEM_HOME" value="${gem_home}" />
      <env key="GEM_PATH" value="" />
      <env key="BUNDLE_PATH" value="${gem_home}" />
      <arg line="-Iapp scripts/build_docs.rb"/>
      <arg value="${match}"/>
    </java>
  </target>

</project>
